import re
from collections import Counter

def count_word_frequencies(text):
    text = text.lower()
    words = re.findall(r'\b\w+\b', text)
    word_count = Counter(words)

    for word, count in word_count.items():
        print(f"{word}: {count}")

input_text = input()

count_word_frequencies(input_text)













def merge_dicts(d1, d2):
    # Create a new dictionary to hold the merged results
    merged_dict = {}

    # Add all entries from the first dictionary
    for key, value in d1.items():
        merged_dict[key] = value

    # Add all entries from the second dictionary
    for key, value in d2.items():
        # If the key already exists, sum the values
        if key in merged_dict:
            merged_dict[key] += value
        else:
            merged_dict[key] = value

    return merged_dict

def parse_input(input_string):
    # Strip the curly braces and whitespace from the input string
    input_string = input_string.strip('{}').strip()
    parsed_dict = {}

    if input_string:  # If the input is not empty
        # Split the string by commas to get each key-value pair
        items = input_string.split(',')
        for item in items:
            # Split by colon to get key and value
            key, value = item.split(':')
            key = key.strip().strip("'").strip('"')  # Clean up key (remove quotes and extra spaces)
            value = int(value.strip())  # Convert value to an integer
            parsed_dict[key] = value

    return parsed_dict

if __name__ == "__main__":
    # Read input for two dictionaries
    dict1_input = input()
    dict2_input = input()

    # Parse the input strings into dictionaries
    dict1 = parse_input(dict1_input)
    dict2 = parse_input(dict2_input)

    # Merge the dictionaries
    merged_dict = merge_dicts(dict1, dict2)

    # Print the merged dictionary
    print("Merged Dictionary:", merged_dict)

